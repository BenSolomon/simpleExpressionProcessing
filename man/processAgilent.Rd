% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/microarray_processing_functions.R
\name{processAgilent}
\alias{processAgilent}
\title{processAgilent}
\usage{
processAgilent(txt_dir, p_array_threshold = 0.5, filter_nonGene_probes = FALSE)
}
\arguments{
\item{txt_dir}{String where raw agilent txt files are located}

\item{p_array_threshold}{Dbl between 0-1. Represents the proportion of
total arrays a probe needs to be expressed within in order to pass
filtering. If NULL, will not filter}

\item{filter_nonGene_probes}{Logical of whether to filter out probes that
have no corresponding gene. Default is FALSE since affy pipeline does not
do this.}
}
\value{
List of matrices. Two expression matrices from processed affy
object, one of raw data, one of normalized data
}
\description{
Processing pipeline for raw agilent array data. Utilizes limma package
}
\details{
Unlike raw affy files, raw agilent files do not contain info about probe
mapping, so these have to be obtained manually. Here we choose to utilize
the probe mappings that are obtained from GEOquery since these should be
kept up to date.

This workflow also includes a filter that removes probes if they are
not expressed across a set proportion of microarrays. The affy processing
pipeline does not have this, so you may chose to set this parameter to 0
so that no filtering is performed.

There is another filter step that removes probes that match to no gene
symbol. However, this is currently commented out since this is not done
in the affy workflow and significantly changes the appearance of diagnostic
normalization box-plots.
}
\examples{
\dontrun{
# Download an Agilent dataset
geo_accession <- "GSE16999"
temp_dir <- getwd()
gse_dir <- sprintf("\%s/\%s", temp_dir, geo_accession)
getSuppFiles(GEO = geo_accession,
             makeDirectory = TRUE,
             baseDir = temp_dir,
             fetch_files = TRUE,
             filter_regex = NULL,
             download_method = "curl",
             unpack = TRUE)

# Process dataset
agilent_output_list <- processAgilent(gse_dir, p_array_threshold = 0.5)

# Test output
names(agilent_output_list) # c("raw_expression", "normalized_expression")
dim(agilent_output_list$raw_expression) # c(45015, 2)
dim(agilent_output_list$normalized_expression) # c(33164, 2)
}
}
